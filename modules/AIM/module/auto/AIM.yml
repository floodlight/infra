################################################################
#
#        Copyright 2013, Big Switch Networks, Inc. 
# 
# Licensed under the Eclipse Public License, Version 1.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
# 
#        http://www.eclipse.org/legal/epl-v10.html
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific
# language governing permissions and limitations under the
# License.
#
################################################################

###############################################################################
#
#  /module/auto/AIM.yml
#
#  AIM Autogen Definitions
#
###############################################################################

cdefs: &cdefs
- AIM_CONFIG_INCLUDE_LOGGING:
    doc: "Include or exclude logging."
    default: 1
- AIM_CONFIG_PORTING_STDLIB:
    doc: "Default all porting macros to use the C standard libraries."
    default: 1
- AIM_CONFIG_PORTING_INCLUDE_STDLIB_HEADERS:
    doc: "Include standard library headers for stdlib porting macros."
    default: AIM_CONFIG_PORTING_STDLIB
- AIM_CONFIG_LOG_MESSAGE_SIZE:
    doc: "Maximum log message buffer."
    default: 256
- AIM_CONFIG_LOG_INCLUDE_LINUX_TIMESTAMP:
    doc: "Include timestamp option for log messages under Linux."
    default: 1
- AIM_CONFIG_LOG_INCLUDE_ENV_VARIABLES:
    doc: "Allow module log settings overrides specified through environment variables."
    default: 1
- AIM_CONFIG_PVS_INCLUDE_TTY:
    doc: "Assume availability of isatty() for PVS objects."
    default: 1
- AIM_CONFIG_LOG_INCLUDE_TTY_COLOR:
    doc: "Include colors for log messages on tty output."
    default: AIM_CONFIG_PVS_INCLUDE_TTY
- AIM_CONFIG_INCLUDE_MODULES_INIT:
    doc: "Include the aim_modules_init() function. This will call all module_init functions. Must have dependmodules.x generated by the builder."
    default: 0
- AIM_CONFIG_INCLUDE_MODULES_DENIT:
    doc: "Include the aim_modules_denit() function. This will call all module_denit functions. Must have dependmodules.x generated by the builder."
    default: 0
- AIM_CONFIG_INCLUDE_MAIN:
    doc: "Define main() in the AIM library. This function will call modules_init(), aim_main(), and modules_denit()."
    default: 0
- AIM_CONFIG_INCLUDE_ENV_ARGV:
    doc: "Support retrieval of program arguments from the environment. Requires AIM_CONFIG_INCLUDE_MAIN."
    default: AIM_CONFIG_INCLUDE_MAIN
- AIM_CONFIG_ENV_ARGV_NAME:
    doc: "The name of the environment variable from which program arguments should be extracted."
    default: "\"AIM_ENV_ARGV\""
- AIM_CONFIG_INCLUDE_VALGRIND:
    doc: "Include valgrind compile-time macros. "
    default: 0
- AIM_CONFIG_INCLUDE_DAEMONIZE:
    doc: "Include daemon and restart support. (Requires posix)."
    default: 0
- AIM_CONFIG_INCLUDE_PVS_SYSLOG:
    doc: "Include syslog pvs."
    default: 0
- AIM_CONFIG_PVS_SYSLOG_IDENT_DEFAULT:
    doc: "Syslog ident string for openlog(). Must be specified."
    default: "\"AIM\""
- AIM_CONFIG_PVS_SYSLOG_OPTIONS_DEFAULT:
    doc: "Default options for openlog()"
    default: LOG_PID
- AIM_CONFIG_PVS_SYSLOG_FACILITY_DEFAULT:
    doc: "Default facility for openlog()"
    default: LOG_DAEMON


aim_error_types: &aim_error_types
- none:
    value: 0
    desc: "No error."
- param:
    value: -1
    desc: "One of the function parameters was invalid."
- not_found:
    value: -2
    desc: "The requested object was not found."
- internal:
    value: -3
    desc: "An unexpected internal error occurred."


aim_log_types: &aim_log_types
- msg
- fatal
- error
- warn
- info
- verbose
- trace
- internal
- bug
- ftrace

aim_log_bits: &aim_log_bits
- msg :      (1 << AIM_LOG_FLAG_MSG)
- fatal :    (1 << AIM_LOG_FLAG_FATAL)
- error :    (1 << AIM_LOG_FLAG_ERROR)
- warn :     (1 << AIM_LOG_FLAG_WARN)
- info :     (1 << AIM_LOG_FLAG_INFO)
- verbose :  (1 << AIM_LOG_FLAG_VERBOSE)
- trace :    (1 << AIM_LOG_FLAG_TRACE)
- internal : (1 << AIM_LOG_FLAG_INTERNAL)
- bug:       (1 << AIM_LOG_FLAG_BUG)
- ftrace:    (1 << AIM_LOG_FLAG_FTRACE)

definitions:
  cdefs:
    AIM_CONFIG_HEADER:
      defs: *cdefs
      basename: aim_config

  aim_common_log_macro:
    common:
      flags: *aim_log_types

  enum:
    aim_log_flag:
      linear: false
      members: *aim_log_types
    aim_log_bit:
      linear: false
      members: *aim_log_bits

    aim_log_option:
      linear: false
      members:
        - enable
        - file_line
        - func
        - timestamp

    aim_log_option_bit:
      linear: false
      members:
        - enable :    (1 << AIM_LOG_OPTION_ENABLE)
        - file_line : (1 << AIM_LOG_OPTION_FILE_LINE)
        - func :      (1 << AIM_LOG_OPTION_FUNC)
        - timestamp:  (1 << AIM_LOG_OPTION_TIMESTAMP)

    aim_error:
      members: *aim_error_types

  portingmacro:
    AIM:
      macros:
        - malloc
        - calloc
        - realloc
        - free
        - memset
        - memcpy
        - memcmp
        - strncpy
        - strstr
        - vsnprintf
        - snprintf
        - printf
        - strlen
        - strcmp
        - strcpy
        - strchr
        - strcat
        - sscanf

  util:
    aim:
      objects:
        - strlcpy



